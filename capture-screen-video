#! /bin/bash

set -e

SCREEN_WIDTH=800
SCREEN_HEIGHT=600

CAMERA_DEV="/dev/video1"

PIP_WIDTH=160
PIP_HEIGHT=120

PIP_LEFT=$((SCREEN_WIDTH-PIP_WIDTH-30))
PIP_TOP=$((SCREEN_HEIGHT-PIP_HEIGHT-50))

FRAMERATE=10

EXECUTABLE="$(readlink -f "$0")"
DIR="$(dirname "$EXECUTABLE")"
DIR="$(readlink -f "$DIR")"

function do_beep()
{
  $DIR/beep "$@" 2> /dev/null
}

NOWAIT=0
if test "$1" = "--nowait"; then
  NOWAIT=1
  shift
fi

TGT="$1"
if test "$1" = ""; then
  echo "usage: $0 [--nowait] file.mkv"
  exit 1
fi
if test -f "$TGT" ; then
  echo "file $TGT already exists"
  exit 1
fi

CUR_RES=$(xdpyinfo  | grep dimensions | cut -d: -f2 | cut -d'p' -f1)
DESIRED_RES="${SCREEN_WIDTH}x${SCREEN_HEIGHT}"

# no quotes on purpose to kill spaces
if test $CUR_RES != $DESIRED_RES; then
  echo "switching resolution..."
  xrandr -s "$DESIRED_RES"
  if test "$NOWAIT" = 0; then
    sleep 5
  fi
  echo "done"
fi

if test "$NOWAIT" = 0; then
  for i in 3 2 1; do
    clear
    figlet $i
    do_beep 440 &
    sleep 1
  done
fi
clear
figlet ACTION!
do_beep 660

$DIR/red-rectangle \
  --width="$PIP_WIDTH" --height="$PIP_HEIGHT" \
  --offset-x="30" --offset-y="30" &

#set -x

gst-launch-1.0 \
    matroskamux streamable=TRUE name=mux \
    ! filesink location="$TGT" \
    \
    v4l2src device="${CAMERA_DEV}" \
    ! "video/x-raw,width=(int)${PIP_WIDTH},height=(int)${PIP_HEIGHT},framerate=(fraction)${FRAMERATE}/1" \
    ! vmix.sink_0 \
    \
    ximagesrc use_damage=FALSE \
    ! videoscale \
    ! videoconvert \
    ! "video/x-raw,width=(int)${SCREEN_WIDTH},height=(int)${SCREEN_HEIGHT},framerate=(fraction)${FRAMERATE}/1" \
    ! vmix.sink_1 \
    \
    videomixer name=vmix \
      sink_0::xpos=${PIP_LEFT} sink_0::ypos=${PIP_TOP} sink_0::zorder=1 \
      sink_1::xpos=0 sink_1::ypos=0 sink_1::zorder=0 \
    ! "video/x-raw,width=(int)${SCREEN_WIDTH},height=(int)${SCREEN_HEIGHT},framerate=(fraction)${FRAMERATE}/1" \
    ! jpegenc \
    ! mux. \
    \
    pulsesrc \
    ! "audio/x-raw,channels=(int)1,rate=(int)22050" \
    ! mux. &
CAPTURE_PID="$!"
sleep 1 # Print after gstreamer chatter

echo -n "[Enter to stop]"
read LINE
kill -INT "$CAPTURE_PID"
wait "$CAPTURE_PID"
